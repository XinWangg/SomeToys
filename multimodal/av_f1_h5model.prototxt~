name: "face_h5_model"
# feature fusion at higher level
# (1, 375)--(1, 1024)--concate--(1, 1399)
layer {
    name: "data"
    type: "HDF5Data"
    top: "images"
    top: "labels"
    top: "audio"
    include {
    phase: TRAIN
  }
  hdf5_data_param {
    source: "av_train.txt"
    batch_size: 250
    shuffle:true
  }
}

layer {
    name: "data"
    type: "HDF5Data"
    top: "images"
    top: "labels"
    top: "audio"
    include {
    phase: TEST
  }
  hdf5_data_param {
    source: "av_test.txt"
    batch_size: 250
    shuffle:true
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "images"
  top: "conv1"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 48
    kernel_size: 15
    stride: 1
    weight_filler {
      type: "gaussian"
      std:0.01
    
    }
    bias_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "ReLU1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}

layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}

layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "ReLU2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}

layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}

layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 1024
    kernel_size: 7
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "ReLU4"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}

layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "conv3"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 1024
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.001
    }
  }
}

# audio part 
layer {
  name: "audio_fc"
  type: "InnerProduct"
  bottom: "audio"
  top: "audio"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 375
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.001
    }
  }
}

# concatenate layer
layer{
    name: "concatenate"
    type:"Concat"
    bottom:"audio"
    bottom:"fc6"
    top:"concate"
}


layer {
        name: "drop_fc6"
        type: "Dropout"
        bottom: "concate"
        top: "concate"
        dropout_param { 
                dropout_ratio:0.8
        }
        
       
}
layer {
  name: "ReLU6"
  type: "ReLU"
  bottom: "concate"
  top: "concate"
}


layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "concate"
  top: "fc7"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 5
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.001
    }
  }
}

layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "fc7"
  bottom: "labels"
  top: "accuracy"
  
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "fc7"
  bottom: "labels"
  top: "loss"
}
